{"version":3,"sources":["biology.svg","passaro.svg","peixe.svg","bicho.svg","planta.svg","jacare.svg","ramo.svg","formiga.svg","Mybutton.js","MyLabel.js","Questao.js","Quizz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Mybutton","_this","this","react_default","a","createElement","className","onClick","props","handclick","status","label","justicativa","Component","MyLabel","style","color","corStyle","text","Questao","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setAlternativa","textLabel","correcao","justificativa","console","log","setState","value","state","questao","id","enunciado","src_Mybutton","correta","b","c","d","e","src_MyLabel","class","display","Quizz","hit","Questoes","map","item","index","src_Questao","key","App","alternativa","src","Passaro","alt","Peixe","Planta","Bicho","Jacare","Formiga","Ramo","logo","src_Quizz","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.279810fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/biology.a7b87a04.svg\";","module.exports = __webpack_public_path__ + \"static/media/passaro.bb566d48.svg\";","module.exports = __webpack_public_path__ + \"static/media/peixe.5976e031.svg\";","module.exports = __webpack_public_path__ + \"static/media/bicho.2fbb2ccf.svg\";","module.exports = __webpack_public_path__ + \"static/media/planta.d99d1e1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/jacare.953ef8c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/ramo.063849b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/formiga.a0c0e169.svg\";","import React, { Component } from 'react';\r\n\r\n\r\nclass Mybutton extends Component{\r\n    render(){\r\n      return(\r\n        <p1 className=\"letra\" onClick={\r\n          ()=>{this.props.handclick(this.props.status,this.props.label,this.props.justicativa)}\r\n          // O Mybutton é um componente que quando clica(handclick) ela executa a função vazia ()=> e retorna através do props (componete de saida),\r\n          //as this.props.status(as propriedades status)\r\n          // e this.props.label(as propriedades label)\r\n\r\n        }\r\n        >\r\n        {this.props.label}\r\n        </p1>\r\n  \r\n      )\r\n  \r\n    }\r\n  \r\n  }\r\n  \r\n\r\n\r\n   export default Mybutton","import React, { Component } from 'react'\r\n\r\nclass MyLabel extends Component{\r\n    render(){\r\n      return(\r\n        <p style={{color: this.props.corStyle}}>{this.props.text} </p>\r\n        \r\n      )\r\n  \r\n    }\r\n  \r\n  }\r\n  export default MyLabel","import React, { Component } from 'react'\r\nimport Questoes from './questoes.json'\r\nimport Mybutton from './Mybutton.js'\r\nimport MyLabel from './MyLabel.js'\r\nimport Quizz from './Quizz'\r\n\r\n\r\n//Agora estamos trabalhando com a Questão individualmente, só com o componente \r\n\r\nclass Questao extends Component{ //criando a Classe(componente)\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = { //aqui estamos atribuindo variaveis que vão controlar as interações, mais abaixo elas sao usadas, todas começam nulas\r\n          status: '', //Qual é a alternativa correta\r\n          textLabel: '', // Qual o usuario escolhei\r\n          correcao:'', // A resposta que deve ser enviada\r\n          corStyle: '',\r\n          justificativa: 'none  ',\r\n          value : {value: 0}\r\n        }\r\n        \r\n        \r\n\r\n    }\r\n\r\n    setAlternativa = (status,textLabel,correcao,justificativa) => { // Criamos um metodo aqui, ele recebe as variaveis, status, textLabel e correcao\r\n        //lebrando que cada valor de status, textLabel e correcao é individual para cada item(questao) graças ao map que esta em loop\r\n          console.log(textLabel)\r\n          this.setState({textLabel})  //setando o valor recebido \r\n          this.setState({status}) //setando o valor recebido\r\n          this.setState({justificativa})\r\n          \r\n          \r\n          if(status==textLabel){ //se textLabel(Alternativa que ele escolheu) for igual ao que esta correta\r\n             this.setState({ //setando o estado de um stade\r\n                corStyle: \"green\",\r\n                correcao: \"Correto\", //aqui setamos os valores\r\n                justificativa : \"inline\",\r\n                value: 1\r\n             \r\n              });\r\n              console.log(this.value)\r\n          }else{ //se não\r\n            this.setState({ //mesma coisa\r\n                corStyle: \"red\",\r\n                correcao: \"Errado\",\r\n                \r\n              });\r\n          } \r\n\r\n      } \r\n      \r\n\r\n    \r\n    render(){\r\n      \r\n\r\n        const {questao} = this.props //aqui, recebemos o valor atribuido la no quizz, na linha 14\r\n        //onde esta descrito que questão {item} é igual a questão\r\n        \r\n        \r\n\r\n      return(\r\n          <div>\r\n              <div className=\"enunciado\">  {/* O classeName é igual o Class=\"enunciado\" serve para colocar style  */}\r\n           \r\n              <p2 className=\"id\">{questao.id}) </p2> {/* exibindo o item que foi colocado em questão.id, ou seja o id da questão */}\r\n            \r\n              <p7>{questao.enunciado}</p7>  \r\n              </div>\r\n              <div className=\"alternativa\">\r\n              <br/>\r\n              <br/>\r\n              \r\n              <Mybutton  handclick={this.setAlternativa}   label=\"a\"  status={questao.correta} justificativa={questao.justificativa}/><p></p>\r\n              \r\n              {/* Mybutton é um componente exportado tambem, vá até lá para entender melhor */}\r\n              {/* Aqui em cima, vemos que quando clicar, vai levar todos as propriedades citadas, Label, que é a opção que ele escolheu, e status, que no caso leva a opção correta */}\r\n              <p2><span>)</span> {questao.a} </p2>\r\n              {/* exibindo a questão a */}\r\n              <br/>\r\n\r\n              <Mybutton handclick={this.setAlternativa} label=\"b\" status={questao.correta} justificativa={questao.justificativa}></Mybutton><p></p>   \r\n              <p2><span>)</span> {questao.b} </p2>\r\n              <br/>\r\n\r\n              <Mybutton handclick={this.setAlternativa} label=\"c\" status={questao.correta} justificativa={questao.justificativa}/><p></p>   \r\n              <p2><span>)</span> {questao.c} </p2>\r\n              <br/>\r\n\r\n              <Mybutton handclick={this.setAlternativa} label=\"d\" status={questao.correta} justificativa={questao.justificativa}/><p></p>   \r\n              <p2><span>)</span> {questao.d} </p2>\r\n              <br/>\r\n              \r\n              <Mybutton handclick={this.setAlternativa} label=\"e\" status={questao.correta} justificativa={questao.justificativa}/><p></p>   \r\n              <p2><span>)</span> {questao.e} </p2>\r\n              <br/>\r\n\r\n              <br/>\r\n              \r\n              </div>\r\n              <div\r\n              > \r\n           \r\n              <MyLabel corStyle={this.state.corStyle} text={this.state.correcao}  />\r\n              <br/>\r\n              <p  class=\"justificativa\" style={{display: this.state.justificativa}}>\r\n              {questao.justificativa} </p>\r\n              </div>\r\n              \r\n              \r\n              {/* Por fim temos um p, também exportado, que exibi a correção calculado lá em cima */}\r\n              <br/>\r\n              <br/>\r\n              \r\n          </div>      \r\n          \r\n        )\r\n\r\n    }\r\n  \r\n  \r\n  }\r\n  export default Questao //nome de como deve chama-la na exportação\r\n","import React, { Component } from 'react'\r\nimport Questoes from './questoes.json' // estamos importando o Json que contém as questões e salvando em Questões\r\nimport Questao from './Questao.js'\r\nimport {contagem} from './Questao.js'\r\nclass Quizz extends Component{ // O extends Component esta presente em todo objeto do react\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { //aqui estamos atribuindo variaveis que vão controlar as interações, mais abaixo elas sao usadas, todas começam nulas\r\n      hit: '0', //Qual é a alternativa correta\r\n      \r\n    }\r\n    \r\n    \r\n\r\n}\r\n    \r\n    render(){ //render para oque vai ser exibido \r\n      return( //criar uma div,p,h ou qualque tag é importante, se não dá erro\r\n          <div> \r\n        \r\n          {Questoes.map((item, index)=>{ // o '.map' esta percorrendo o json e salva a questão em item, tipo o each\r\n            \r\n            return <Questao questao={item}  key={'questao-list-key ${index}'}/> //estamos criando o objeto Questao, importado de \"./Questao.js\" \r\n            //passando como parametro todo o item, não sei oque é a key, mas me parece importante \r\n            \r\n  \r\n          })}\r\n        \r\n        </div>      \r\n      )\r\n    }\r\n  \r\n  \r\n  }\r\n  export default Quizz","import React, { Component } from 'react'; //pega a Classe Component do react \n\nimport logo from './biology.svg'; // logo, imagem\nimport Quizz from './Quizz.js'; // Componente Quizz \nimport Passaro from './passaro.svg'\nimport Peixe from './peixe.svg'\nimport Bicho from './bicho.svg'\nimport Planta from './planta.svg'\nimport Jacare from './jacare.svg'\nimport Ramo from './ramo.svg'\nimport Formiga from './formiga.svg'\n\nimport './App.css'; //css\n\n\n\n\n\nclass App extends Component { //app é onde tudo da pagina sera gerado,\n  // no JSX é o HTML e Javascript se junta formando os componentes de uma pagina\n \n  constructor(props){ // O props são meios de interligar os componentes\n    super(props);\n    this.state = { //state é o estado do componente estamos criando o componente alternativa\n      alternativa: '',\n    }  \n}\n  \n\n  render() { //render é oque será renderizado o componente, os \"{}\" servem para indicar onde as variaveis vão ser colocadas,\n            // no caso do logo que declaramos lá em cima, ela substitui no src do diretorio  \n\n    return ( // return tem em todo render, tudo será exibido a parti daqui\n      <div className=\"App\">\n        <header className=\"App-header\"> \n          <img src={Passaro} className=\"passaro\" alt=\"passaro\"/> \n          <img src={Peixe} className=\"peixe\" alt=\"peixe\"/> \n          <img src={Planta} className=\"planta\" alt=\"planta\"/> \n          <img src={Bicho} className=\"bicho\" alt=\"bicho\"/> \n          <img src={Jacare} className=\"jacare\" alt=\"jacare brabo\"/> \n          <img src={Formiga} className=\"formiga\" alt=\"formiga\"/> \n          \n          <img src={Ramo} className=\"ramo\" alt=\"ramo\"/> \n              \n          <img src={logo} className=\"App-logo\" alt=\"logo\" />  \n          <h1 className=\"titulo\">\n            Questionario de relações interespecífica\n          </h1>  \n          <p1 className=\"atencao\">Clique em cima da letra correta</p1>\n          <div class=\"zind\">\n          <Quizz/>\n          </div>\n          {/* Como vemos o componente <Quizz /> esta sendo exportado do arquivo \"./Quizz.js\" lá esta oque o objeto efetivamente faz  */}\n        </header>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}